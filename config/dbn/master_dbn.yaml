
data:
 scale_data: True
 pixel_padding: 1
 number_channels: 50
 fill_value: -9999.0
 valid_min: -100.0
 valid_max: 100000000
 subset_count: 1
 output_subset_count: 10
 reader_type: "numpy"
 reader_kwargs:
  no_arg: "no_arg"
 chan_dim: 0
 delete_chans: []
 transform_default:
  chans: []
  transform: []

 files_train: ["/data/nlahaye/remoteSensing/MASTER/MASTERL1B_1981719_06_20190806_2153_2156_V01_georeferenced.tif.npy",
"/data/nlahaye/remoteSensing/MASTER/MASTERL1B_1981720_07_20190808_0055_0103_V01_georeferenced.tif.npy",
"/data/nlahaye/remoteSensing/MASTER/MASTERL1B_1981720_09_20190808_0237_0238_V01_georeferenced.tif.npy"]

 files_test: ["/data/nlahaye/remoteSensing/MASTER/MASTERL1B_1981719_02_20190806_1851_1900_V01_georeferenced.tif.npy",
"/data/nlahaye/remoteSensing/MASTER/MASTERL1B_1981719_08_20190806_2249_2259_V01_georeferenced.tif.npy",
"/data/nlahaye/remoteSensing/MASTER/MASTERL1B_1981719_05_20190806_2033_2039_V01_georeferenced.tif.npy",
"/data/nlahaye/remoteSensing/MASTER/MASTERL1B_1981721_05_20190809_0219_0226_V01_georeferenced.tif.npy",
"/data/nlahaye/remoteSensing/MASTER/MASTERL1B_1981721_02_20190809_0120_0121_V01_georeferenced.tif.npy",
"/data/nlahaye/remoteSensing/MASTER/MASTERL1B_1981721_01_20190809_0113_0117_V01_georeferenced.tif.npy"]

scaler:
 name: "standard" 

output:
 out_dir: "/data/nlahaye/output/Learnergy/DBN_MASTER/"
 training_output: "output.data"
 training_mse: "rec_mse.data"
 testing_output: "output_test.data"
 testing_mse: "rec_mse_test.data"
 model: "dbn.pth"

dbn:
 overwrite_model: True
 params:
  model_type: ["gaussian_selu"] 
  dbn_arch: [2000] #[250, 500, 2000] #, 2000]
  gibbs_steps: [1] #, 7, 7] #, 10] #, 25]
  learning_rate: [0.0001] #, 0.0001, 0.0001] #, 0.01] #, 0.01]
  momentum: [0.95] #, 0.95, 0.95] #, 0.95] #, 0.95]
  decay: [0.0001] #, 0.0001, 0.0001] #, 0.0001] #, 0.0001]
  temp: [1.0] #, 1.0, 1.0] ##[0.9, 0.75, 0.5] #, 1.0] #, 0.5] #, 0.5] 
  nesterov_accel: [True]
  normalize_learnergy: [False]
  batch_normalize: [False]

 training:
  use_gpu: True
  world_size: 1
  rank: 0
  device_ids: [0,1,2,3,4,5,6,7]
  batch_size: 1000
  epochs: [100] #[8] #, 1, 1] #, 5] #, 10]
