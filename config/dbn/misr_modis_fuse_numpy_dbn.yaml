
data:
 pixel_padding: 1
 number_channels: 73
 fill_value: -9999.0
 valid_min: -100.0
 valid_max: 100000000
 subset_count: 1
 output_subset_count: 10
 reader_type: "numpy"
 reader_kwargs:
  no_arg: "no_arg"
 chan_dim: 0
 delete_chans: [66]
 transform_default:
  chans: [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 60, 71, 72, 73]
  transform: [-2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0]
 files_train: ["/data/nlahaye/remotesensing/data/MisrModisFuse/Fuse1_9Cam.npy",
"/data/nlahaye/remotesensing/data/MisrModisFuse/Fuse3_9Cam.npy",
"/data/nlahaye/remotesensing/data/MisrModisFuse/Fuse4_9Cam.npy"]
 files_test: ["/data/nlahaye/remotesensing/data/MisrModisFuse/Fuse2_9Cam.npy",
"/data/nlahaye/remotesensing/data/MisrModisFuse/Fuse5_9Cam.npy",
"/data/nlahaye/remotesensing/data/MisrModisFuse/Fuse9_9Cam.npy"]
#"/data/nlahaye/remotesensing/data/MisrModisFuse/Fuse4_9Cam.npy"] 
 

output:
 out_dir: "output/Learnergy/DBN_MISR_MODIS_1/"
 training_output: "output.data"
 training_mse: "rec_mse.data"
 testing_output: "output_test.data"
 testing_mse: "rec_mse_test.data"
 model: "dbn.pth"

dbn:
 overwrite_model: True
 params:
  model_type: ["gaussian_selu"] #, 'gaussian_relu_dropout', 'gaussian_relu_dropout'] #'variance_gaussian_dropout' #"gaussian_dropout"
  #model_type: "variance_gaussian"
  dbn_arch: [2000] #[250, 500, 2000] #, 2000]
  gibbs_steps: [3] #, 7, 7] #, 10] #, 25]
  learning_rate: [0.0001] #, 0.0001, 0.0001] #, 0.01] #, 0.01]
  momentum: [0.95] #, 0.95, 0.95] #, 0.95] #, 0.95]
  decay: [0.0001] #, 0.0001, 0.0001] #, 0.0001] #, 0.0001]
  temp: [1.0] #, 1.0, 1.0] ##[0.9, 0.75, 0.5] #, 1.0] #, 0.5] #, 0.5] 
  nesterov_accel: [True]
  normalize_learnergy: [False]
  batch_normalize: [False]

 training:
  use_gpu: True
  world_size: 1
  rank: 0
  device_ids: [0,1,2,3,4,5,6,7]
  batch_size: 10000
  epochs: [65] #[8] #, 1, 1] #, 5] #, 10]
